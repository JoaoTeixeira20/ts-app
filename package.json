{
  "name": "ts-app",
  "version": "0.1.0",
  "private": true,
  "homepage": "./",
  "author": "John Doe <john@doe.com>",
  "main": "./public/electron.js",
  "dependencies": {
    "@testing-library/jest-dom": "^5.16.1",
    "@testing-library/react": "^12.1.2",
    "@testing-library/user-event": "^13.5.0",
    "@types/jest": "^27.0.3",
    "@types/node": "^16.11.14",
    "@types/react": "^17.0.37",
    "@types/react-dom": "^17.0.11",
    "electron-store": "^8.0.1",
    "formik": "^2.2.9",
    "react": "^17.0.2",
    "react-dom": "^17.0.2",
    "react-scripts": "5.0.0",
    "styled-components": "^5.3.3",
    "typescript": "^4.5.4",
    "web-vitals": "^2.1.2",
    "yup": "^0.32.11"
  },
  "scripts": {
    "start": "react-scripts start",
    "build": "react-scripts build",
    "test": "react-scripts test",
    "eject": "react-scripts eject",
    "electron:start": "concurrently -k \"cross-env BROWSER=none npm start\" \"wait-on http://localhost:3000 && electronmon .\"",
    "electron:package:mac": "npm run build && electron-builder -m -c.extraMetadata.main=build/electron.js",
    "electron:package:win": "npm run build && electron-builder -w -c.extraMetadata.main=build/electron.js",
    "electron:package:linux": "npm run build && electron-builder -l -c.extraMetadata.main=build/electron.js"
  },
  "eslintConfig": {
    "extends": [
      "react-app",
      "react-app/jest"
    ]
  },
  "browserslist": {
    "production": [
      ">0.2%",
      "not dead",
      "not op_mini all"
    ],
    "development": [
      "last 1 chrome version",
      "last 1 firefox version",
      "last 1 safari version"
    ]
  },
  "devDependencies": {
    "@types/styled-components": "^5.1.18",
    "concurrently": "^6.5.0",
    "cross-env": "^7.0.3",
    "electron": "^16.0.5",
    "electron-builder": "^22.14.5",
    "electronmon": "^2.0.2",
    "wait-on": "^6.0.0"
  },
  "build": {
    "appId": "com.electron.myapp",
    "productName": "My Electron App",
    "files": [
      "build/**/*",
      "node_modules/**/*"
    ],
    "directories": {
      "buildResources": "public"
    },
    "mac": {
      "target": "dmg"
    },
    "win": {
      "target": "nsis"
    },
    "linux": {
      "target": "deb"
    }
  }
}
